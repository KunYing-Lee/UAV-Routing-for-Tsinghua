{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/drone_delivery/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport OrderPanel from './components/OrderPanel';\nimport DroneStatus from './components/DroneStatus';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [drones, setDrones] = useState([]);\n  const [routes, setRoutes] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [locations, setLocations] = useState({\n    gates: [],\n    canteens: [],\n    dorms: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [simulationSpeed, setSimulationSpeed] = useState(1); // 1X, 2X, 3X, 5X\n\n  // 倍速选项\n  const speedOptions = [{\n    value: 1,\n    label: '1X',\n    icon: '🐌'\n  }, {\n    value: 2,\n    label: '2X',\n    icon: '🏃'\n  }, {\n    value: 3,\n    label: '3X',\n    icon: '🚀'\n  }, {\n    value: 5,\n    label: '5X',\n    icon: '⚡'\n  }];\n\n  // 获取当前倍速的显示文本\n  const getCurrentSpeedText = () => {\n    const option = speedOptions.find(opt => opt.value === simulationSpeed);\n    return option ? `${option.icon} ${option.label}` : '1X';\n  };\n\n  // 计算更新间隔（毫秒）\n  const getUpdateInterval = () => {\n    return 1000 / simulationSpeed; // 基础1秒除以倍速\n  };\n\n  // 加载GeoJSON数据\n  useEffect(() => {\n    const loadGeoJSONData = async () => {\n      setIsLoading(true);\n      try {\n        // 加载校门数据\n        const gatesResponse = await fetch('/data/gates.geojson');\n        const gatesData = await gatesResponse.json();\n\n        // 加载食堂数据\n        const canteensResponse = await fetch('/data/canteens.geojson');\n        const canteensData = await canteensResponse.json();\n\n        // 加载宿舍数据\n        const dormsResponse = await fetch('/data/dorms_sorted.geojson');\n        const dormsData = await dormsResponse.json();\n\n        // 提取地点信息\n        const gates = gatesData.features.map((feature, index) => ({\n          id: `gate_${index + 1}`,\n          name: feature.properties.name,\n          coords: feature.geometry.coordinates,\n          type: 'gate'\n        }));\n        const canteens = canteensData.features.map((feature, index) => ({\n          id: `canteen_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `食堂${index + 1}`,\n          coords: feature.geometry.coordinates[0][0],\n          // 取多边形的第一个点\n          type: 'canteen'\n        }));\n        const dorms = dormsData.features.map((feature, index) => ({\n          id: `dorm_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `宿舍${index + 1}`,\n          coords: feature.geometry.coordinates[0][0],\n          // 取多边形的第一个点\n          type: 'dorm'\n        }));\n        setLocations({\n          gates,\n          canteens,\n          dorms\n        });\n        console.log('地点数据加载完成:', {\n          gates,\n          canteens,\n          dorms\n        });\n        console.log('校门数量:', gates.length);\n        console.log('食堂数量:', canteens.length);\n        console.log('宿舍数量:', dorms.length);\n\n        // 显示前几个地点的详细信息\n        console.log('前3个校门:', gates.slice(0, 3));\n        console.log('前3个食堂:', canteens.slice(0, 3));\n        console.log('前3个宿舍:', dorms.slice(0, 3));\n\n        // 检查航线数据\n        console.log('航线数据状态:', routes ? '已加载' : '未加载');\n        if (routes) {\n          var _routes$routes, _routes$routes$cantee, _routes$routes2, _routes$routes2$gate_, _routes$routes3, _routes$routes3$cante;\n          console.log('食堂到宿舍航线数量:', ((_routes$routes = routes.routes) === null || _routes$routes === void 0 ? void 0 : (_routes$routes$cantee = _routes$routes.canteen_to_dorm) === null || _routes$routes$cantee === void 0 ? void 0 : _routes$routes$cantee.length) || 0);\n          console.log('校门到宿舍航线数量:', ((_routes$routes2 = routes.routes) === null || _routes$routes2 === void 0 ? void 0 : (_routes$routes2$gate_ = _routes$routes2.gate_to_dorm) === null || _routes$routes2$gate_ === void 0 ? void 0 : _routes$routes2$gate_.length) || 0);\n          if (((_routes$routes3 = routes.routes) === null || _routes$routes3 === void 0 ? void 0 : (_routes$routes3$cante = _routes$routes3.canteen_to_dorm) === null || _routes$routes3$cante === void 0 ? void 0 : _routes$routes3$cante.length) > 0) {\n            console.log('第一条食堂到宿舍航线:', routes.routes.canteen_to_dorm[0]);\n          }\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('加载地点数据失败:', error);\n        // 使用默认数据\n        setLocations({\n          gates: [{\n            id: 'gate_1',\n            name: '东门',\n            coords: [116.325263, 40.0053343],\n            type: 'gate'\n          }, {\n            id: 'gate_2',\n            name: '西门',\n            coords: [116.315263, 40.0053343],\n            type: 'gate'\n          }, {\n            id: 'gate_3',\n            name: '南门',\n            coords: [116.320263, 40.0003343],\n            type: 'gate'\n          }],\n          canteens: [{\n            id: 'canteen_1',\n            name: '观畴园餐厅（万人大食堂）',\n            coords: [116.315263, 40.0053343],\n            type: 'canteen'\n          }, {\n            id: 'canteen_2',\n            name: '紫荆园餐厅',\n            coords: [116.322763, 40.0103343],\n            type: 'canteen'\n          }, {\n            id: 'canteen_3',\n            name: '清芬园餐厅',\n            coords: [116.318763, 40.0073343],\n            type: 'canteen'\n          }],\n          dorms: [{\n            id: 'dorm_1',\n            name: '紫荆学生公寓1号楼',\n            coords: [116.320263, 40.0103343],\n            type: 'dorm'\n          }, {\n            id: 'dorm_2',\n            name: '紫荆学生公寓2号楼',\n            coords: [116.321263, 40.0103343],\n            type: 'dorm'\n          }, {\n            id: 'dorm_3',\n            name: '紫荆学生公寓3号楼',\n            coords: [116.322263, 40.0103343],\n            type: 'dorm'\n          }]\n        });\n        setIsLoading(false);\n      }\n    };\n    loadGeoJSONData();\n  }, []);\n\n  // 加载航线数据\n  useEffect(() => {\n    console.log('开始加载航线数据...');\n\n    // 创建AbortController用于超时控制\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30秒超时\n\n    fetch('/route_planning_results.json', {\n      signal: controller.signal\n    }).then(response => {\n      console.log('航线数据响应状态:', response.status, response.statusText);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      var _data$routes, _data$routes$canteen_, _data$routes2, _data$routes2$gate_to, _data$routes3, _data$routes3$canteen;\n      clearTimeout(timeoutId);\n      setRoutes(data);\n      console.log('航线数据加载完成:', data);\n      console.log('食堂到宿舍航线数量:', ((_data$routes = data.routes) === null || _data$routes === void 0 ? void 0 : (_data$routes$canteen_ = _data$routes.canteen_to_dorm) === null || _data$routes$canteen_ === void 0 ? void 0 : _data$routes$canteen_.length) || 0);\n      console.log('校门到宿舍航线数量:', ((_data$routes2 = data.routes) === null || _data$routes2 === void 0 ? void 0 : (_data$routes2$gate_to = _data$routes2.gate_to_dorm) === null || _data$routes2$gate_to === void 0 ? void 0 : _data$routes2$gate_to.length) || 0);\n      if (((_data$routes3 = data.routes) === null || _data$routes3 === void 0 ? void 0 : (_data$routes3$canteen = _data$routes3.canteen_to_dorm) === null || _data$routes3$canteen === void 0 ? void 0 : _data$routes3$canteen.length) > 0) {\n        console.log('第一条食堂到宿舍航线:', data.routes.canteen_to_dorm[0]);\n        console.log('航线起点坐标:', data.routes.canteen_to_dorm[0].path[0]);\n        console.log('航线终点坐标:', data.routes.canteen_to_dorm[0].path[data.routes.canteen_to_dorm[0].path.length - 1]);\n      }\n    }).catch(error => {\n      clearTimeout(timeoutId);\n      if (error.name === 'AbortError') {\n        console.error('航线数据加载超时');\n      } else {\n        console.error('加载航线数据失败:', error);\n      }\n      // 使用示例数据\n      setRoutes({\n        routes: {\n          canteen_to_dorm: [],\n          gate_to_dorm: []\n        }\n      });\n    });\n  }, []);\n\n  // 添加新订单\n  const addOrder = orderData => {\n    const newOrder = {\n      id: `ORDER_${Date.now()}`,\n      orderNumber: `THU_${Math.random().toString(36).substr(2, 9).toUpperCase()}`,\n      createTime: new Date().toISOString(),\n      status: 'pending',\n      // pending, assigned, delivering, completed\n      ...orderData\n    };\n    setOrders(prev => [...prev, newOrder]);\n\n    // 如果模拟正在运行，自动分配无人机\n    if (isSimulationRunning) {\n      assignDroneToOrder(newOrder);\n    }\n  };\n\n  // 分配无人机到订单\n  const assignDroneToOrder = order => {\n    console.log('分配无人机到订单:', order.id, '起点:', order.startPoint, '终点:', order.endPoint);\n\n    // 尝试找到匹配的实际航线\n    let flightPath = null;\n    let altitude = 75; // 默认高度\n\n    if (routes) {\n      const bestRoute = findBestRoute(order.startPoint, order.endPoint);\n      if (bestRoute) {\n        flightPath = bestRoute.path;\n        altitude = bestRoute.height || 75;\n        console.log('使用实际航线:', bestRoute.from, '->', bestRoute.to, '高度:', altitude);\n      }\n    }\n\n    // 如果没有找到匹配的航线，生成直线路径\n    if (!flightPath) {\n      flightPath = generateFlightPath(order.startPoint, order.endPoint);\n      console.log('使用生成的直线路径');\n    }\n    console.log('最终飞行路径:', flightPath);\n    const availableDrone = {\n      id: `DRONE_${Date.now()}`,\n      orderId: order.id,\n      status: 'assigned',\n      startPosition: order.startPoint,\n      targetPosition: order.endPoint,\n      path: flightPath,\n      currentPosition: order.startPoint,\n      pathIndex: 0,\n      speed: 10,\n      // 米/秒\n      altitude: altitude\n    };\n    console.log('创建的无人机对象:', availableDrone);\n    setDrones(prev => [...prev, availableDrone]);\n\n    // 更新订单状态\n    setOrders(prev => prev.map(o => o.id === order.id ? {\n      ...o,\n      status: 'assigned'\n    } : o));\n  };\n\n  // 查找最佳航线\n  const findBestRoute = (start, end) => {\n    if (!routes) {\n      console.log('航线数据未加载');\n      return null;\n    }\n    console.log('查找航线，起点坐标:', start, '终点坐标:', end);\n\n    // 根据起点和终点查找匹配的航线\n    const allRoutes = [...routes.routes.canteen_to_dorm, ...routes.routes.gate_to_dorm];\n    console.log('总航线数量:', allRoutes.length);\n\n    // 找到匹配的航线（通过比较坐标）\n    const matchedRoute = allRoutes.find((route, index) => {\n      if (!route.path || route.path.length === 0) {\n        console.log(`航线${index}没有路径数据`);\n        return false;\n      }\n      const routeStart = route.path[0];\n      const routeEnd = route.path[route.path.length - 1];\n      console.log(`检查航线${index}:`, route.from, '->', route.to);\n      console.log('航线起点:', routeStart, '航线终点:', routeEnd);\n\n      // 检查起点是否匹配\n      const startMatches = isCoordinateNear(start, routeStart);\n      // 检查终点是否匹配\n      const endMatches = isCoordinateNear(end, routeEnd);\n      console.log('起点匹配:', startMatches, '终点匹配:', endMatches);\n      return startMatches && endMatches;\n    });\n    if (matchedRoute) {\n      console.log('找到匹配航线:', matchedRoute.from, '->', matchedRoute.to);\n      return matchedRoute;\n    }\n\n    // 如果没有找到匹配的航线，返回null\n    console.log('未找到匹配航线，起点:', start, '终点:', end);\n    return null;\n  };\n\n  // 检查两个坐标是否接近（允许一定的误差）\n  const isCoordinateNear = (coord1, coord2) => {\n    if (!coord1 || !coord2) return false;\n    const latDiff = Math.abs(coord1[1] - coord2[1]);\n    const lngDiff = Math.abs(coord1[0] - coord2[0]);\n\n    // 允许0.001度的误差（大约100米）\n    return latDiff < 0.001 && lngDiff < 0.001;\n  };\n\n  // 生成无人机飞行路径\n  const generateFlightPath = (start, end) => {\n    // 生成从起点到终点的路径点\n    const path = [];\n    const steps = 20; // 路径点数量\n\n    for (let i = 0; i <= steps; i++) {\n      const progress = i / steps;\n      const lat = start[1] + (end[1] - start[1]) * progress;\n      const lng = start[0] + (end[0] - start[0]) * progress;\n      path.push([lng, lat]);\n    }\n    return path;\n  };\n\n  // 开始模拟\n  const startSimulation = () => {\n    console.log('开始模拟，当前订单数量:', orders.length);\n    setIsSimulationRunning(true);\n\n    // 为所有待分配的订单分配无人机\n    orders.forEach(order => {\n      if (order.status === 'pending') {\n        console.log('为订单分配无人机:', order.id);\n        assignDroneToOrder(order);\n      }\n    });\n  };\n\n  // 停止模拟\n  const stopSimulation = () => {\n    setIsSimulationRunning(false);\n  };\n\n  // 重置系统\n  const resetSystem = () => {\n    setOrders([]);\n    setDrones([]);\n    setSelectedOrder(null);\n    setIsSimulationRunning(false);\n  };\n\n  // 更新无人机位置（模拟飞行）\n  useEffect(() => {\n    if (!isSimulationRunning) return;\n    const interval = setInterval(() => {\n      console.log('更新无人机位置，当前无人机数量:', drones.length, '当前倍速:', simulationSpeed);\n      setDrones(prev => prev.map(drone => {\n        var _drone$path;\n        console.log('处理无人机:', drone.id, '状态:', drone.status, '路径长度:', (_drone$path = drone.path) === null || _drone$path === void 0 ? void 0 : _drone$path.length);\n        if (drone.status === 'assigned') {\n          // 开始配送\n          console.log('无人机开始配送:', drone.id);\n          return {\n            ...drone,\n            status: 'delivering'\n          };\n        } else if (drone.status === 'delivering' && drone.path && drone.path.length > 0) {\n          // 更新无人机位置 - 沿着路径逐步移动\n          const nextIndex = Math.min((drone.pathIndex || 0) + 1, drone.path.length - 1);\n          const newStatus = nextIndex >= drone.path.length - 1 ? 'completed' : 'delivering';\n          console.log('无人机位置更新:', drone.id, '从索引', drone.pathIndex, '到', nextIndex, '新状态:', newStatus);\n\n          // 如果完成，更新订单状态\n          if (newStatus === 'completed') {\n            setOrders(prev => prev.map(o => o.id === drone.orderId ? {\n              ...o,\n              status: 'completed'\n            } : o));\n          }\n          return {\n            ...drone,\n            currentPosition: drone.path[nextIndex],\n            pathIndex: nextIndex,\n            status: newStatus\n          };\n        }\n        return drone;\n      }));\n    }, getUpdateInterval()); // 使用动态更新间隔\n\n    return () => clearInterval(interval);\n  }, [isSimulationRunning, simulationSpeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u6E05\\u534E\\u5927\\u5B66\\u65E0\\u4EBA\\u673A\\u5916\\u5356\\u5B9E\\u65F6\\u8C03\\u5EA6\\u7CFB\\u7EDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [!isSimulationRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSimulation,\n          className: \"start-btn\",\n          children: \"\\uD83D\\uDE80 \\u5F00\\u59CB\\u6A21\\u62DF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopSimulation,\n          className: \"stop-btn\",\n          children: \"\\u23F9\\uFE0F \\u505C\\u6B62\\u6A21\\u62DF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSystem,\n          className: \"reset-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u7F6E\\u7CFB\\u7EDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"speed-label\",\n            children: \"\\u500D\\u901F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speed-buttons\",\n            children: speedOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSimulationSpeed(option.value),\n              className: `speed-btn ${simulationSpeed === option.value ? 'active' : ''}`,\n              title: `${option.label} 速度`,\n              children: [option.icon, \" \", option.label]\n            }, option.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"current-speed\",\n            children: getCurrentSpeedText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(OrderPanel, {\n          onAddOrder: addOrder,\n          orders: orders,\n          onSelectOrder: setSelectedOrder,\n          selectedOrder: selectedOrder,\n          locations: locations,\n          isSimulationRunning: isSimulationRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DroneStatus, {\n          drones: drones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          orders: orders,\n          drones: drones,\n          routes: routes,\n          selectedOrder: selectedOrder,\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Eg6cIh3mJAN3zFRXbCP3rrb4Uco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","OrderPanel","DroneStatus","jsxDEV","_jsxDEV","App","_s","orders","setOrders","drones","setDrones","routes","setRoutes","selectedOrder","setSelectedOrder","locations","setLocations","gates","canteens","dorms","isSimulationRunning","setIsSimulationRunning","isLoading","setIsLoading","simulationSpeed","setSimulationSpeed","speedOptions","value","label","icon","getCurrentSpeedText","option","find","opt","getUpdateInterval","loadGeoJSONData","gatesResponse","fetch","gatesData","json","canteensResponse","canteensData","dormsResponse","dormsData","features","map","feature","index","id","name","properties","coords","geometry","coordinates","type","console","log","length","slice","_routes$routes","_routes$routes$cantee","_routes$routes2","_routes$routes2$gate_","_routes$routes3","_routes$routes3$cante","canteen_to_dorm","gate_to_dorm","error","controller","AbortController","timeoutId","setTimeout","abort","signal","then","response","status","statusText","ok","Error","data","_data$routes","_data$routes$canteen_","_data$routes2","_data$routes2$gate_to","_data$routes3","_data$routes3$canteen","clearTimeout","path","catch","addOrder","orderData","newOrder","Date","now","orderNumber","Math","random","toString","substr","toUpperCase","createTime","toISOString","prev","assignDroneToOrder","order","startPoint","endPoint","flightPath","altitude","bestRoute","findBestRoute","height","from","to","generateFlightPath","availableDrone","orderId","startPosition","targetPosition","currentPosition","pathIndex","speed","o","start","end","allRoutes","matchedRoute","route","routeStart","routeEnd","startMatches","isCoordinateNear","endMatches","coord1","coord2","latDiff","abs","lngDiff","steps","i","progress","lat","lng","push","startSimulation","forEach","stopSimulation","resetSystem","interval","setInterval","drone","_drone$path","nextIndex","min","newStatus","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onAddOrder","onSelectOrder","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/drone_delivery/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport OrderPanel from './components/OrderPanel';\nimport DroneStatus from './components/DroneStatus';\nimport './App.css';\n\nfunction App() {\n  const [orders, setOrders] = useState([]);\n  const [drones, setDrones] = useState([]);\n  const [routes, setRoutes] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [locations, setLocations] = useState({\n    gates: [],\n    canteens: [],\n    dorms: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [simulationSpeed, setSimulationSpeed] = useState(1); // 1X, 2X, 3X, 5X\n\n  // 倍速选项\n  const speedOptions = [\n    { value: 1, label: '1X', icon: '🐌' },\n    { value: 2, label: '2X', icon: '🏃' },\n    { value: 3, label: '3X', icon: '🚀' },\n    { value: 5, label: '5X', icon: '⚡' }\n  ];\n\n  // 获取当前倍速的显示文本\n  const getCurrentSpeedText = () => {\n    const option = speedOptions.find(opt => opt.value === simulationSpeed);\n    return option ? `${option.icon} ${option.label}` : '1X';\n  };\n\n  // 计算更新间隔（毫秒）\n  const getUpdateInterval = () => {\n    return 1000 / simulationSpeed; // 基础1秒除以倍速\n  };\n\n  // 加载GeoJSON数据\n  useEffect(() => {\n    const loadGeoJSONData = async () => {\n      setIsLoading(true);\n      try {\n        // 加载校门数据\n        const gatesResponse = await fetch('/data/gates.geojson');\n        const gatesData = await gatesResponse.json();\n        \n        // 加载食堂数据\n        const canteensResponse = await fetch('/data/canteens.geojson');\n        const canteensData = await canteensResponse.json();\n        \n        // 加载宿舍数据\n        const dormsResponse = await fetch('/data/dorms_sorted.geojson');\n        const dormsData = await dormsResponse.json();\n\n        // 提取地点信息\n        const gates = gatesData.features.map((feature, index) => ({\n          id: `gate_${index + 1}`,\n          name: feature.properties.name,\n          coords: feature.geometry.coordinates,\n          type: 'gate'\n        }));\n\n        const canteens = canteensData.features.map((feature, index) => ({\n          id: `canteen_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `食堂${index + 1}`,\n          coords: feature.geometry.coordinates[0][0], // 取多边形的第一个点\n          type: 'canteen'\n        }));\n\n        const dorms = dormsData.features.map((feature, index) => ({\n          id: `dorm_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `宿舍${index + 1}`,\n          coords: feature.geometry.coordinates[0][0], // 取多边形的第一个点\n          type: 'dorm'\n        }));\n\n        setLocations({ gates, canteens, dorms });\n        console.log('地点数据加载完成:', { gates, canteens, dorms });\n        console.log('校门数量:', gates.length);\n        console.log('食堂数量:', canteens.length);\n        console.log('宿舍数量:', dorms.length);\n        \n        // 显示前几个地点的详细信息\n        console.log('前3个校门:', gates.slice(0, 3));\n        console.log('前3个食堂:', canteens.slice(0, 3));\n        console.log('前3个宿舍:', dorms.slice(0, 3));\n        \n        // 检查航线数据\n        console.log('航线数据状态:', routes ? '已加载' : '未加载');\n        if (routes) {\n          console.log('食堂到宿舍航线数量:', routes.routes?.canteen_to_dorm?.length || 0);\n          console.log('校门到宿舍航线数量:', routes.routes?.gate_to_dorm?.length || 0);\n          if (routes.routes?.canteen_to_dorm?.length > 0) {\n            console.log('第一条食堂到宿舍航线:', routes.routes.canteen_to_dorm[0]);\n          }\n        }\n        \n        setIsLoading(false);\n      } catch (error) {\n        console.error('加载地点数据失败:', error);\n        // 使用默认数据\n        setLocations({\n          gates: [\n            { id: 'gate_1', name: '东门', coords: [116.325263, 40.0053343], type: 'gate' },\n            { id: 'gate_2', name: '西门', coords: [116.315263, 40.0053343], type: 'gate' },\n            { id: 'gate_3', name: '南门', coords: [116.320263, 40.0003343], type: 'gate' }\n          ],\n          canteens: [\n            { id: 'canteen_1', name: '观畴园餐厅（万人大食堂）', coords: [116.315263, 40.0053343], type: 'canteen' },\n            { id: 'canteen_2', name: '紫荆园餐厅', coords: [116.322763, 40.0103343], type: 'canteen' },\n            { id: 'canteen_3', name: '清芬园餐厅', coords: [116.318763, 40.0073343], type: 'canteen' }\n          ],\n          dorms: [\n            { id: 'dorm_1', name: '紫荆学生公寓1号楼', coords: [116.320263, 40.0103343], type: 'dorm' },\n            { id: 'dorm_2', name: '紫荆学生公寓2号楼', coords: [116.321263, 40.0103343], type: 'dorm' },\n            { id: 'dorm_3', name: '紫荆学生公寓3号楼', coords: [116.322263, 40.0103343], type: 'dorm' }\n          ]\n        });\n        \n        setIsLoading(false);\n      }\n    };\n\n    loadGeoJSONData();\n  }, []);\n\n  // 加载航线数据\n  useEffect(() => {\n    console.log('开始加载航线数据...');\n    \n    // 创建AbortController用于超时控制\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30秒超时\n    \n    fetch('/route_planning_results.json', {\n      signal: controller.signal\n    })\n      .then(response => {\n        console.log('航线数据响应状态:', response.status, response.statusText);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        clearTimeout(timeoutId);\n        setRoutes(data);\n        console.log('航线数据加载完成:', data);\n        console.log('食堂到宿舍航线数量:', data.routes?.canteen_to_dorm?.length || 0);\n        console.log('校门到宿舍航线数量:', data.routes?.gate_to_dorm?.length || 0);\n        if (data.routes?.canteen_to_dorm?.length > 0) {\n          console.log('第一条食堂到宿舍航线:', data.routes.canteen_to_dorm[0]);\n          console.log('航线起点坐标:', data.routes.canteen_to_dorm[0].path[0]);\n          console.log('航线终点坐标:', data.routes.canteen_to_dorm[0].path[data.routes.canteen_to_dorm[0].path.length - 1]);\n        }\n      })\n      .catch(error => {\n        clearTimeout(timeoutId);\n        if (error.name === 'AbortError') {\n          console.error('航线数据加载超时');\n        } else {\n          console.error('加载航线数据失败:', error);\n        }\n        // 使用示例数据\n        setRoutes({\n          routes: {\n            canteen_to_dorm: [],\n            gate_to_dorm: []\n          }\n        });\n      });\n  }, []);\n\n  // 添加新订单\n  const addOrder = (orderData) => {\n    const newOrder = {\n      id: `ORDER_${Date.now()}`,\n      orderNumber: `THU_${Math.random().toString(36).substr(2, 9).toUpperCase()}`,\n      createTime: new Date().toISOString(),\n      status: 'pending', // pending, assigned, delivering, completed\n      ...orderData\n    };\n    \n    setOrders(prev => [...prev, newOrder]);\n    \n    // 如果模拟正在运行，自动分配无人机\n    if (isSimulationRunning) {\n      assignDroneToOrder(newOrder);\n    }\n  };\n\n  // 分配无人机到订单\n  const assignDroneToOrder = (order) => {\n    console.log('分配无人机到订单:', order.id, '起点:', order.startPoint, '终点:', order.endPoint);\n    \n    // 尝试找到匹配的实际航线\n    let flightPath = null;\n    let altitude = 75; // 默认高度\n    \n    if (routes) {\n      const bestRoute = findBestRoute(order.startPoint, order.endPoint);\n      if (bestRoute) {\n        flightPath = bestRoute.path;\n        altitude = bestRoute.height || 75;\n        console.log('使用实际航线:', bestRoute.from, '->', bestRoute.to, '高度:', altitude);\n      }\n    }\n    \n    // 如果没有找到匹配的航线，生成直线路径\n    if (!flightPath) {\n      flightPath = generateFlightPath(order.startPoint, order.endPoint);\n      console.log('使用生成的直线路径');\n    }\n    \n    console.log('最终飞行路径:', flightPath);\n    \n    const availableDrone = {\n      id: `DRONE_${Date.now()}`,\n      orderId: order.id,\n      status: 'assigned',\n      startPosition: order.startPoint,\n      targetPosition: order.endPoint,\n      path: flightPath,\n      currentPosition: order.startPoint,\n      pathIndex: 0,\n      speed: 10, // 米/秒\n      altitude: altitude\n    };\n    \n    console.log('创建的无人机对象:', availableDrone);\n    \n    setDrones(prev => [...prev, availableDrone]);\n    \n    // 更新订单状态\n    setOrders(prev => \n      prev.map(o => \n        o.id === order.id ? { ...o, status: 'assigned' } : o\n      )\n    );\n  };\n\n  // 查找最佳航线\n  const findBestRoute = (start, end) => {\n    if (!routes) {\n      console.log('航线数据未加载');\n      return null;\n    }\n    \n    console.log('查找航线，起点坐标:', start, '终点坐标:', end);\n    \n    // 根据起点和终点查找匹配的航线\n    const allRoutes = [...routes.routes.canteen_to_dorm, ...routes.routes.gate_to_dorm];\n    console.log('总航线数量:', allRoutes.length);\n    \n    // 找到匹配的航线（通过比较坐标）\n    const matchedRoute = allRoutes.find((route, index) => {\n      if (!route.path || route.path.length === 0) {\n        console.log(`航线${index}没有路径数据`);\n        return false;\n      }\n      \n      const routeStart = route.path[0];\n      const routeEnd = route.path[route.path.length - 1];\n      \n      console.log(`检查航线${index}:`, route.from, '->', route.to);\n      console.log('航线起点:', routeStart, '航线终点:', routeEnd);\n      \n      // 检查起点是否匹配\n      const startMatches = isCoordinateNear(start, routeStart);\n      // 检查终点是否匹配\n      const endMatches = isCoordinateNear(end, routeEnd);\n      \n      console.log('起点匹配:', startMatches, '终点匹配:', endMatches);\n      \n      return startMatches && endMatches;\n    });\n    \n    if (matchedRoute) {\n      console.log('找到匹配航线:', matchedRoute.from, '->', matchedRoute.to);\n      return matchedRoute;\n    }\n    \n    // 如果没有找到匹配的航线，返回null\n    console.log('未找到匹配航线，起点:', start, '终点:', end);\n    return null;\n  };\n\n  // 检查两个坐标是否接近（允许一定的误差）\n  const isCoordinateNear = (coord1, coord2) => {\n    if (!coord1 || !coord2) return false;\n    \n    const latDiff = Math.abs(coord1[1] - coord2[1]);\n    const lngDiff = Math.abs(coord1[0] - coord2[0]);\n    \n    // 允许0.001度的误差（大约100米）\n    return latDiff < 0.001 && lngDiff < 0.001;\n  };\n\n  // 生成无人机飞行路径\n  const generateFlightPath = (start, end) => {\n    // 生成从起点到终点的路径点\n    const path = [];\n    const steps = 20; // 路径点数量\n    \n    for (let i = 0; i <= steps; i++) {\n      const progress = i / steps;\n      const lat = start[1] + (end[1] - start[1]) * progress;\n      const lng = start[0] + (end[0] - start[0]) * progress;\n      path.push([lng, lat]);\n    }\n    \n    return path;\n  };\n\n  // 开始模拟\n  const startSimulation = () => {\n    console.log('开始模拟，当前订单数量:', orders.length);\n    setIsSimulationRunning(true);\n    \n    // 为所有待分配的订单分配无人机\n    orders.forEach(order => {\n      if (order.status === 'pending') {\n        console.log('为订单分配无人机:', order.id);\n        assignDroneToOrder(order);\n      }\n    });\n  };\n\n  // 停止模拟\n  const stopSimulation = () => {\n    setIsSimulationRunning(false);\n  };\n\n  // 重置系统\n  const resetSystem = () => {\n    setOrders([]);\n    setDrones([]);\n    setSelectedOrder(null);\n    setIsSimulationRunning(false);\n  };\n\n  // 更新无人机位置（模拟飞行）\n  useEffect(() => {\n    if (!isSimulationRunning) return;\n\n    const interval = setInterval(() => {\n      console.log('更新无人机位置，当前无人机数量:', drones.length, '当前倍速:', simulationSpeed);\n      \n      setDrones(prev => \n        prev.map(drone => {\n          console.log('处理无人机:', drone.id, '状态:', drone.status, '路径长度:', drone.path?.length);\n          \n          if (drone.status === 'assigned') {\n            // 开始配送\n            console.log('无人机开始配送:', drone.id);\n            return { ...drone, status: 'delivering' };\n          } else if (drone.status === 'delivering' && drone.path && drone.path.length > 0) {\n            // 更新无人机位置 - 沿着路径逐步移动\n            const nextIndex = Math.min((drone.pathIndex || 0) + 1, drone.path.length - 1);\n            const newStatus = nextIndex >= drone.path.length - 1 ? 'completed' : 'delivering';\n            \n            console.log('无人机位置更新:', drone.id, '从索引', drone.pathIndex, '到', nextIndex, '新状态:', newStatus);\n            \n            // 如果完成，更新订单状态\n            if (newStatus === 'completed') {\n              setOrders(prev => \n                prev.map(o => \n                  o.id === drone.orderId ? { ...o, status: 'completed' } : o\n                )\n              );\n            }\n            \n            return {\n              ...drone,\n              currentPosition: drone.path[nextIndex],\n              pathIndex: nextIndex,\n              status: newStatus\n            };\n          }\n          return drone;\n        })\n      );\n    }, getUpdateInterval()); // 使用动态更新间隔\n\n    return () => clearInterval(interval);\n  }, [isSimulationRunning, simulationSpeed]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>清华大学无人机外卖实时调度系统</h1>\n        <div className=\"header-controls\">\n          {!isSimulationRunning ? (\n            <button onClick={startSimulation} className=\"start-btn\">\n              🚀 开始模拟\n            </button>\n          ) : (\n            <button onClick={stopSimulation} className=\"stop-btn\">\n              ⏹️ 停止模拟\n            </button>\n          )}\n          <button onClick={resetSystem} className=\"reset-btn\">\n            🔄 重置系统\n          </button>\n          \n          {/* 倍速控制 */}\n          <div className=\"speed-controls\">\n            <span className=\"speed-label\">倍速:</span>\n            <div className=\"speed-buttons\">\n              {speedOptions.map(option => (\n                <button\n                  key={option.value}\n                  onClick={() => setSimulationSpeed(option.value)}\n                  className={`speed-btn ${simulationSpeed === option.value ? 'active' : ''}`}\n                  title={`${option.label} 速度`}\n                >\n                  {option.icon} {option.label}\n                </button>\n              ))}\n            </div>\n            <span className=\"current-speed\">{getCurrentSpeedText()}</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n\n          \n          <OrderPanel \n            onAddOrder={addOrder}\n            orders={orders}\n            onSelectOrder={setSelectedOrder}\n            selectedOrder={selectedOrder}\n            locations={locations}\n            isSimulationRunning={isSimulationRunning}\n          />\n          <DroneStatus drones={drones} />\n        </div>\n        \n        <div className=\"map-container\">\n          <Map \n            orders={orders}\n            drones={drones}\n            routes={routes}\n            selectedOrder={selectedOrder}\n            locations={locations}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}