{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/drone 2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport OrderPanel from './components/OrderPanel';\nimport DroneStatus from './components/DroneStatus';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [drones, setDrones] = useState([]);\n  const [routes, setRoutes] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [locations, setLocations] = useState({\n    gates: [],\n    canteens: [],\n    dorms: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(false);\n\n  // 加载GeoJSON数据\n  useEffect(() => {\n    const loadGeoJSONData = async () => {\n      try {\n        // 加载校门数据\n        const gatesResponse = await fetch('/data/gates.geojson');\n        const gatesData = await gatesResponse.json();\n\n        // 加载食堂数据\n        const canteensResponse = await fetch('/data/canteens.geojson');\n        const canteensData = await canteensResponse.json();\n\n        // 加载宿舍数据\n        const dormsResponse = await fetch('/data/dorms.geojson');\n        const dormsData = await dormsResponse.json();\n\n        // 提取地点信息\n        const gates = gatesData.features.map((feature, index) => ({\n          id: feature.properties.id || `gate_${index + 1}`,\n          name: feature.properties.name || `校门${index + 1}`,\n          coords: feature.geometry.coordinates,\n          type: 'gate'\n        }));\n        const canteens = canteensData.features.map((feature, index) => ({\n          id: feature.properties.id || `canteen_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `食堂${index + 1}`,\n          coords: feature.geometry.coordinates[0][0],\n          // 取多边形的第一个点\n          type: 'canteen'\n        }));\n        const dorms = dormsData.features.map((feature, index) => ({\n          id: feature.properties.id || `dorm_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `宿舍${index + 1}`,\n          coords: feature.geometry.coordinates[0][0],\n          // 取多边形的第一个点\n          type: 'dorm'\n        }));\n        setLocations({\n          gates,\n          canteens,\n          dorms\n        });\n        console.log('地点数据加载完成:', {\n          gates,\n          canteens,\n          dorms\n        });\n      } catch (error) {\n        console.error('加载地点数据失败:', error);\n        // 使用默认数据\n        setLocations({\n          gates: [{\n            id: 'gate_1',\n            name: '东门',\n            coords: [116.325263, 40.0053343],\n            type: 'gate'\n          }, {\n            id: 'gate_2',\n            name: '西门',\n            coords: [116.315263, 40.0053343],\n            type: 'gate'\n          }, {\n            id: 'gate_3',\n            name: '南门',\n            coords: [116.320263, 40.0003343],\n            type: 'gate'\n          }],\n          canteens: [{\n            id: 'canteen_1',\n            name: '观畴园餐厅（万人大食堂）',\n            coords: [116.315263, 40.0053343],\n            type: 'canteen'\n          }, {\n            id: 'canteen_2',\n            name: '紫荆园餐厅',\n            coords: [116.322763, 40.0103343],\n            type: 'canteen'\n          }, {\n            id: 'canteen_3',\n            name: '清芬园餐厅',\n            coords: [116.318763, 40.0073343],\n            type: 'canteen'\n          }],\n          dorms: [{\n            id: 'dorm_1',\n            name: '紫荆学生公寓1号楼',\n            coords: [116.320263, 40.0103343],\n            type: 'dorm'\n          }, {\n            id: 'dorm_2',\n            name: '紫荆学生公寓2号楼',\n            coords: [116.321263, 40.0103343],\n            type: 'dorm'\n          }, {\n            id: 'dorm_3',\n            name: '紫荆学生公寓3号楼',\n            coords: [116.322263, 40.0103343],\n            type: 'dorm'\n          }]\n        });\n      }\n    };\n    loadGeoJSONData();\n  }, []);\n\n  // 加载航线数据\n  useEffect(() => {\n    fetch('/route_planning_results.json').then(response => response.json()).then(data => {\n      setRoutes(data);\n      console.log('航线数据加载完成:', data);\n    }).catch(error => {\n      console.error('加载航线数据失败:', error);\n      // 使用示例数据\n      setRoutes({\n        routes: {\n          canteen_to_dorm: [],\n          gate_to_dorm: []\n        }\n      });\n    });\n  }, []);\n\n  // 添加新订单\n  const addOrder = orderData => {\n    const newOrder = {\n      id: `ORDER_${Date.now()}`,\n      orderNumber: `THU_${Math.random().toString(36).substr(2, 9).toUpperCase()}`,\n      createTime: new Date().toISOString(),\n      status: 'pending',\n      // pending, assigned, delivering, completed\n      ...orderData\n    };\n    setOrders(prev => [...prev, newOrder]);\n\n    // 如果模拟正在运行，自动分配无人机\n    if (isSimulationRunning) {\n      assignDroneToOrder(newOrder);\n    }\n  };\n\n  // 分配无人机到订单\n  const assignDroneToOrder = order => {\n    const availableDrone = {\n      id: `DRONE_${Date.now()}`,\n      orderId: order.id,\n      status: 'assigned',\n      currentPosition: order.startPoint,\n      targetPosition: order.endPoint,\n      path: [],\n      // 将从航线数据中获取\n      speed: 10,\n      // 米/秒\n      altitude: 100 // 米\n    };\n\n    // 从航线数据中查找最佳路径\n    if (routes) {\n      const bestRoute = findBestRoute(order.startPoint, order.endPoint);\n      if (bestRoute) {\n        availableDrone.path = bestRoute.path;\n        availableDrone.altitude = bestRoute.height;\n      }\n    }\n    setDrones(prev => [...prev, availableDrone]);\n\n    // 更新订单状态\n    setOrders(prev => prev.map(o => o.id === order.id ? {\n      ...o,\n      status: 'assigned'\n    } : o));\n  };\n\n  // 查找最佳航线\n  const findBestRoute = (start, end) => {\n    if (!routes) return null;\n\n    // 简化版本：随机选择一条可用航线\n    const allRoutes = [...routes.routes.canteen_to_dorm, ...routes.routes.gate_to_dorm];\n    if (allRoutes.length > 0) {\n      return allRoutes[Math.floor(Math.random() * allRoutes.length)];\n    }\n    return null;\n  };\n\n  // 开始模拟\n  const startSimulation = () => {\n    setIsSimulationRunning(true);\n\n    // 为所有待分配的订单分配无人机\n    orders.forEach(order => {\n      if (order.status === 'pending') {\n        assignDroneToOrder(order);\n      }\n    });\n  };\n\n  // 停止模拟\n  const stopSimulation = () => {\n    setIsSimulationRunning(false);\n  };\n\n  // 重置系统\n  const resetSystem = () => {\n    setOrders([]);\n    setDrones([]);\n    setSelectedOrder(null);\n    setIsSimulationRunning(false);\n  };\n\n  // 更新无人机位置（模拟飞行）\n  useEffect(() => {\n    if (!isSimulationRunning) return;\n    const interval = setInterval(() => {\n      setDrones(prev => prev.map(drone => {\n        if (drone.status === 'assigned') {\n          // 开始配送\n          return {\n            ...drone,\n            status: 'delivering'\n          };\n        } else if (drone.status === 'delivering' && drone.path.length > 0) {\n          // 更新无人机位置\n          const currentIndex = Math.floor(Math.random() * drone.path.length);\n          const newStatus = currentIndex >= drone.path.length - 1 ? 'completed' : 'delivering';\n\n          // 如果完成，更新订单状态\n          if (newStatus === 'completed') {\n            setOrders(prev => prev.map(o => o.id === drone.orderId ? {\n              ...o,\n              status: 'completed'\n            } : o));\n          }\n          return {\n            ...drone,\n            currentPosition: drone.path[currentIndex] || drone.targetPosition,\n            status: newStatus\n          };\n        }\n        return drone;\n      }));\n    }, 2000); // 每2秒更新一次\n\n    return () => clearInterval(interval);\n  }, [isSimulationRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u6E05\\u534E\\u5927\\u5B66\\u65E0\\u4EBA\\u673A\\u5916\\u5356\\u5B9E\\u65F6\\u8C03\\u5EA6\\u7CFB\\u7EDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [!isSimulationRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSimulation,\n          className: \"start-btn\",\n          children: \"\\uD83D\\uDE80 \\u5F00\\u59CB\\u6A21\\u62DF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopSimulation,\n          className: \"stop-btn\",\n          children: \"\\u23F9\\uFE0F \\u505C\\u6B62\\u6A21\\u62DF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSystem,\n          className: \"reset-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u7F6E\\u7CFB\\u7EDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(OrderPanel, {\n          onAddOrder: addOrder,\n          orders: orders,\n          onSelectOrder: setSelectedOrder,\n          selectedOrder: selectedOrder,\n          locations: locations,\n          isSimulationRunning: isSimulationRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DroneStatus, {\n          drones: drones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          orders: orders,\n          drones: drones,\n          routes: routes,\n          selectedOrder: selectedOrder,\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RxxU2duO4J7sUcUA/EXz+99ZEeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","OrderPanel","DroneStatus","jsxDEV","_jsxDEV","App","_s","orders","setOrders","drones","setDrones","routes","setRoutes","selectedOrder","setSelectedOrder","locations","setLocations","gates","canteens","dorms","isSimulationRunning","setIsSimulationRunning","loadGeoJSONData","gatesResponse","fetch","gatesData","json","canteensResponse","canteensData","dormsResponse","dormsData","features","map","feature","index","id","properties","name","coords","geometry","coordinates","type","console","log","error","then","response","data","catch","canteen_to_dorm","gate_to_dorm","addOrder","orderData","newOrder","Date","now","orderNumber","Math","random","toString","substr","toUpperCase","createTime","toISOString","status","prev","assignDroneToOrder","order","availableDrone","orderId","currentPosition","startPoint","targetPosition","endPoint","path","speed","altitude","bestRoute","findBestRoute","height","o","start","end","allRoutes","length","floor","startSimulation","forEach","stopSimulation","resetSystem","interval","setInterval","drone","currentIndex","newStatus","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddOrder","onSelectOrder","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/drone 2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport OrderPanel from './components/OrderPanel';\nimport DroneStatus from './components/DroneStatus';\nimport './App.css';\n\nfunction App() {\n  const [orders, setOrders] = useState([]);\n  const [drones, setDrones] = useState([]);\n  const [routes, setRoutes] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [locations, setLocations] = useState({\n    gates: [],\n    canteens: [],\n    dorms: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(false);\n\n  // 加载GeoJSON数据\n  useEffect(() => {\n    const loadGeoJSONData = async () => {\n      try {\n        // 加载校门数据\n        const gatesResponse = await fetch('/data/gates.geojson');\n        const gatesData = await gatesResponse.json();\n        \n        // 加载食堂数据\n        const canteensResponse = await fetch('/data/canteens.geojson');\n        const canteensData = await canteensResponse.json();\n        \n        // 加载宿舍数据\n        const dormsResponse = await fetch('/data/dorms.geojson');\n        const dormsData = await dormsResponse.json();\n\n        // 提取地点信息\n        const gates = gatesData.features.map((feature, index) => ({\n          id: feature.properties.id || `gate_${index + 1}`,\n          name: feature.properties.name || `校门${index + 1}`,\n          coords: feature.geometry.coordinates,\n          type: 'gate'\n        }));\n\n        const canteens = canteensData.features.map((feature, index) => ({\n          id: feature.properties.id || `canteen_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `食堂${index + 1}`,\n          coords: feature.geometry.coordinates[0][0], // 取多边形的第一个点\n          type: 'canteen'\n        }));\n\n        const dorms = dormsData.features.map((feature, index) => ({\n          id: feature.properties.id || `dorm_${index + 1}`,\n          name: feature.properties.name || feature.properties['name:zh'] || `宿舍${index + 1}`,\n          coords: feature.geometry.coordinates[0][0], // 取多边形的第一个点\n          type: 'dorm'\n        }));\n\n        setLocations({ gates, canteens, dorms });\n        console.log('地点数据加载完成:', { gates, canteens, dorms });\n      } catch (error) {\n        console.error('加载地点数据失败:', error);\n        // 使用默认数据\n        setLocations({\n          gates: [\n            { id: 'gate_1', name: '东门', coords: [116.325263, 40.0053343], type: 'gate' },\n            { id: 'gate_2', name: '西门', coords: [116.315263, 40.0053343], type: 'gate' },\n            { id: 'gate_3', name: '南门', coords: [116.320263, 40.0003343], type: 'gate' }\n          ],\n          canteens: [\n            { id: 'canteen_1', name: '观畴园餐厅（万人大食堂）', coords: [116.315263, 40.0053343], type: 'canteen' },\n            { id: 'canteen_2', name: '紫荆园餐厅', coords: [116.322763, 40.0103343], type: 'canteen' },\n            { id: 'canteen_3', name: '清芬园餐厅', coords: [116.318763, 40.0073343], type: 'canteen' }\n          ],\n          dorms: [\n            { id: 'dorm_1', name: '紫荆学生公寓1号楼', coords: [116.320263, 40.0103343], type: 'dorm' },\n            { id: 'dorm_2', name: '紫荆学生公寓2号楼', coords: [116.321263, 40.0103343], type: 'dorm' },\n            { id: 'dorm_3', name: '紫荆学生公寓3号楼', coords: [116.322263, 40.0103343], type: 'dorm' }\n          ]\n        });\n      }\n    };\n\n    loadGeoJSONData();\n  }, []);\n\n  // 加载航线数据\n  useEffect(() => {\n    fetch('/route_planning_results.json')\n      .then(response => response.json())\n      .then(data => {\n        setRoutes(data);\n        console.log('航线数据加载完成:', data);\n      })\n      .catch(error => {\n        console.error('加载航线数据失败:', error);\n        // 使用示例数据\n        setRoutes({\n          routes: {\n            canteen_to_dorm: [],\n            gate_to_dorm: []\n          }\n        });\n      });\n  }, []);\n\n  // 添加新订单\n  const addOrder = (orderData) => {\n    const newOrder = {\n      id: `ORDER_${Date.now()}`,\n      orderNumber: `THU_${Math.random().toString(36).substr(2, 9).toUpperCase()}`,\n      createTime: new Date().toISOString(),\n      status: 'pending', // pending, assigned, delivering, completed\n      ...orderData\n    };\n    \n    setOrders(prev => [...prev, newOrder]);\n    \n    // 如果模拟正在运行，自动分配无人机\n    if (isSimulationRunning) {\n      assignDroneToOrder(newOrder);\n    }\n  };\n\n  // 分配无人机到订单\n  const assignDroneToOrder = (order) => {\n    const availableDrone = {\n      id: `DRONE_${Date.now()}`,\n      orderId: order.id,\n      status: 'assigned',\n      currentPosition: order.startPoint,\n      targetPosition: order.endPoint,\n      path: [], // 将从航线数据中获取\n      speed: 10, // 米/秒\n      altitude: 100 // 米\n    };\n    \n    // 从航线数据中查找最佳路径\n    if (routes) {\n      const bestRoute = findBestRoute(order.startPoint, order.endPoint);\n      if (bestRoute) {\n        availableDrone.path = bestRoute.path;\n        availableDrone.altitude = bestRoute.height;\n      }\n    }\n    \n    setDrones(prev => [...prev, availableDrone]);\n    \n    // 更新订单状态\n    setOrders(prev => \n      prev.map(o => \n        o.id === order.id ? { ...o, status: 'assigned' } : o\n      )\n    );\n  };\n\n  // 查找最佳航线\n  const findBestRoute = (start, end) => {\n    if (!routes) return null;\n    \n    // 简化版本：随机选择一条可用航线\n    const allRoutes = [...routes.routes.canteen_to_dorm, ...routes.routes.gate_to_dorm];\n    if (allRoutes.length > 0) {\n      return allRoutes[Math.floor(Math.random() * allRoutes.length)];\n    }\n    return null;\n  };\n\n  // 开始模拟\n  const startSimulation = () => {\n    setIsSimulationRunning(true);\n    \n    // 为所有待分配的订单分配无人机\n    orders.forEach(order => {\n      if (order.status === 'pending') {\n        assignDroneToOrder(order);\n      }\n    });\n  };\n\n  // 停止模拟\n  const stopSimulation = () => {\n    setIsSimulationRunning(false);\n  };\n\n  // 重置系统\n  const resetSystem = () => {\n    setOrders([]);\n    setDrones([]);\n    setSelectedOrder(null);\n    setIsSimulationRunning(false);\n  };\n\n  // 更新无人机位置（模拟飞行）\n  useEffect(() => {\n    if (!isSimulationRunning) return;\n\n    const interval = setInterval(() => {\n      setDrones(prev => \n        prev.map(drone => {\n          if (drone.status === 'assigned') {\n            // 开始配送\n            return { ...drone, status: 'delivering' };\n          } else if (drone.status === 'delivering' && drone.path.length > 0) {\n            // 更新无人机位置\n            const currentIndex = Math.floor(Math.random() * drone.path.length);\n            const newStatus = currentIndex >= drone.path.length - 1 ? 'completed' : 'delivering';\n            \n            // 如果完成，更新订单状态\n            if (newStatus === 'completed') {\n              setOrders(prev => \n                prev.map(o => \n                  o.id === drone.orderId ? { ...o, status: 'completed' } : o\n                )\n              );\n            }\n            \n            return {\n              ...drone,\n              currentPosition: drone.path[currentIndex] || drone.targetPosition,\n              status: newStatus\n            };\n          }\n          return drone;\n        })\n      );\n    }, 2000); // 每2秒更新一次\n\n    return () => clearInterval(interval);\n  }, [isSimulationRunning]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>清华大学无人机外卖实时调度系统</h1>\n        <div className=\"header-controls\">\n          {!isSimulationRunning ? (\n            <button onClick={startSimulation} className=\"start-btn\">\n              🚀 开始模拟\n            </button>\n          ) : (\n            <button onClick={stopSimulation} className=\"stop-btn\">\n              ⏹️ 停止模拟\n            </button>\n          )}\n          <button onClick={resetSystem} className=\"reset-btn\">\n            🔄 重置系统\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <OrderPanel \n            onAddOrder={addOrder}\n            orders={orders}\n            onSelectOrder={setSelectedOrder}\n            selectedOrder={selectedOrder}\n            locations={locations}\n            isSimulationRunning={isSimulationRunning}\n          />\n          <DroneStatus drones={drones} />\n        </div>\n        \n        <div className=\"map-container\">\n          <Map \n            orders={orders}\n            drones={drones}\n            routes={routes}\n            selectedOrder={selectedOrder}\n            locations={locations}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}